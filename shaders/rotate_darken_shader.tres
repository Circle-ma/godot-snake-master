[gd_resource type="VisualShader" load_steps=29 format=2]

[ext_resource path="res://apple2.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 6

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=6]
source = 2
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "time"

[sub_resource type="VisualShaderNodeColorOp" id=8]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=9]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 1

[sub_resource type="VisualShaderNodeVectorCompose" id=13]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=16]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=24]
function = 1

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=26]

[sub_resource type="VisualShaderNodeScalarOp" id=27]
operator = 2

[resource]
code = "shader_type canvas_item;



void vertex() {
// Input:17
	float n_out17p0 = TIME;

// ScalarOp:20
	float n_in20p1 = 0.50000;
	float n_out20p0 = n_out17p0 * n_in20p1;

// ScalarFunc:18
	float n_out18p0 = sin(n_out20p0);

// ScalarOp:19
	float n_in19p1 = 0.50000;
	float n_out19p0 = n_out18p0 * n_in19p1;

// ScalarFunc:5
	float n_out5p0 = cos(n_out19p0);

// Input:2
	vec3 n_out2p0 = vec3(UV,0.0);

// VectorOp:7
	vec3 n_in7p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out7p0 = n_out2p0 - n_in7p1;

// VectorDecompose:8
	float n_out8p0 = n_out7p0.x;
	float n_out8p1 = n_out7p0.y;
	float n_out8p2 = n_out7p0.z;

// ScalarOp:9
	float n_out9p0 = n_out5p0 * n_out8p0;

// ScalarFunc:4
	float n_out4p0 = sin(n_out19p0);

// ScalarOp:10
	float n_out10p0 = n_out4p0 * n_out8p1;

// ScalarOp:11
	float n_out11p0 = n_out9p0 - n_out10p0;

// ScalarOp:13
	float n_out13p0 = n_out8p0 * n_out4p0;

// ScalarOp:14
	float n_out14p0 = n_out8p1 * n_out5p0;

// ScalarOp:15
	float n_out15p0 = n_out13p0 + n_out14p0;

// VectorCompose:12
	vec3 n_out12p0 = vec3(n_out11p0, n_out15p0, n_out8p2);

// VectorOp:16
	vec3 n_in16p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out16p0 = n_out12p0 + n_in16p1;

// Output:0
	UV = n_out16p0.xy;

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Texture:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out3p0.xy);
		n_out5p0 = _tex_read.rgb;
		n_out5p1 = _tex_read.a;
	}

// Input:6
	float n_out6p0 = TIME;

// ScalarOp:18
	float n_in18p1 = 1.00000;
	float n_out18p0 = n_out6p0 * n_in18p1;

// ScalarFunc:9
	float n_out9p0 = sin(n_out18p0);

// ScalarOp:11
	float n_in11p1 = 1.00000;
	float n_out11p0 = n_out9p0 + n_in11p1;

// ScalarOp:13
	float n_in13p1 = 2.00000;
	float n_out13p0 = n_out11p0 / n_in13p1;

// ScalarOp:10
	float n_in10p1 = 0.50000;
	float n_out10p0 = max(n_out13p0, n_in10p1);

// VectorCompose:8
	vec3 n_out8p0 = vec3(n_out10p0, n_out10p0, n_out10p0);

// ColorOp:7
	vec3 n_out7p0 = min(n_out5p0, n_out8p0);

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -260.627, 367 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 840, 120 )
nodes/vertex/2/node = SubResource( 21 )
nodes/vertex/2/position = Vector2( -80, 320 )
nodes/vertex/4/node = SubResource( 23 )
nodes/vertex/4/position = Vector2( -120, 40 )
nodes/vertex/5/node = SubResource( 24 )
nodes/vertex/5/position = Vector2( -120, 100 )
nodes/vertex/7/node = SubResource( 25 )
nodes/vertex/7/position = Vector2( -100, 180 )
nodes/vertex/8/node = SubResource( 26 )
nodes/vertex/8/position = Vector2( 80, 180 )
nodes/vertex/9/node = SubResource( 27 )
nodes/vertex/9/position = Vector2( 320, -20 )
nodes/vertex/10/node = SubResource( 11 )
nodes/vertex/10/position = Vector2( 320, 100 )
nodes/vertex/11/node = SubResource( 12 )
nodes/vertex/11/position = Vector2( 520, 20 )
nodes/vertex/12/node = SubResource( 13 )
nodes/vertex/12/position = Vector2( 520, 360 )
nodes/vertex/13/node = SubResource( 14 )
nodes/vertex/13/position = Vector2( 320, 220 )
nodes/vertex/14/node = SubResource( 15 )
nodes/vertex/14/position = Vector2( 320, 340 )
nodes/vertex/15/node = SubResource( 16 )
nodes/vertex/15/position = Vector2( 520, 160 )
nodes/vertex/16/node = SubResource( 17 )
nodes/vertex/16/position = Vector2( 760, 380 )
nodes/vertex/17/node = SubResource( 18 )
nodes/vertex/17/position = Vector2( -120, -360 )
nodes/vertex/18/node = SubResource( 19 )
nodes/vertex/18/position = Vector2( -120, -180 )
nodes/vertex/19/node = SubResource( 20 )
nodes/vertex/19/position = Vector2( -120, -100 )
nodes/vertex/20/node = SubResource( 22 )
nodes/vertex/20/position = Vector2( -120, -300 )
nodes/vertex/connections = PoolIntArray( 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 1, 5, 0, 9, 0, 8, 1, 10, 1, 4, 0, 10, 0, 9, 0, 11, 0, 10, 0, 11, 1, 11, 0, 12, 0, 8, 0, 13, 0, 4, 0, 13, 1, 8, 1, 14, 0, 5, 0, 14, 1, 13, 0, 15, 0, 14, 0, 15, 1, 15, 0, 12, 1, 8, 2, 12, 2, 12, 0, 16, 0, 16, 0, 0, 1, 18, 0, 19, 0, 19, 0, 4, 0, 19, 0, 5, 0, 17, 0, 20, 0, 20, 0, 18, 0 )
nodes/fragment/0/position = Vector2( 840, 360 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -20, 380 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 220, 360 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( -220, 360 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 660, 480 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 460, 560 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -220, 560 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 280, 560 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -40, 560 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 120, 560 )
nodes/fragment/18/node = SubResource( 4 )
nodes/fragment/18/position = Vector2( -220, 440 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 8, 0, 7, 1, 10, 0, 8, 0, 10, 0, 8, 1, 10, 0, 8, 2, 9, 0, 11, 0, 11, 0, 13, 0, 13, 0, 10, 0, 6, 0, 18, 0, 18, 0, 9, 0, 5, 0, 7, 0, 5, 1, 0, 1, 7, 0, 0, 0 )
