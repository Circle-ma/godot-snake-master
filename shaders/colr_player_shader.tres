[gd_resource type="VisualShader" load_steps=6 format=2]

[ext_resource path="res://snake_body.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.37685, 0.812713, 0.927632, 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=4]
source = 2
texture = ExtResource( 1 )

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0 = vec3(0.376850, 0.812713, 0.927632);
	float n_out2p1 = 1.000000;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out4p0.xy);
		n_out6p0 = _tex_read.rgb;
		n_out6p1 = _tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out2p0 * vec3(n_out6p1);

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = dot(n_out5p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -97, 71.25 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 700, 280 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 300, 140 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( 40, 320 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( 480, 280 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 240, 320 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 5, 0, 0, 0, 5, 0, 0, 1, 4, 0, 6, 0, 6, 1, 5, 1 )
